import React, { useState } from 'react';
import Header from "../../components/common/Header";
import Footer from "../../components/common/Footer";
import axios from "axios"; // D√πng axios ƒë·ªÉ g·ªçi API

const ReportCampaign = () => {
  // State qu·∫£n l√Ω c√°c l·ª±a ch·ªçn b√°o c√°o
  const reasonsList = [
    "Th√¥ng tin ch∆∞a ƒë∆∞·ª£c x√°c th·ª±c",
    "Kh√¥ng c√≥ b·∫±ng ch·ª©ng r√µ r√†ng",
    "S·ª≠ d·ª•ng h√¨nh ·∫£nh/th√¥ng tin nh·∫°y c·∫£m kh√¥ng ƒë√∫ng c√°ch",
    "C√≥ d·∫•u hi·ªáu l·ª´a ƒë·∫£o/chi·∫øm ƒëo·∫°t",
    "T·ªï ch·ª©c g√¢y qu·ªπ n√†y kh√¥ng ƒë√°ng tin c·∫≠y",
    "Kh√°c"
  ];
  const [selectedReasons, setSelectedReasons] = useState([]);
  const [otherReason, setOtherReason] = useState("");
  const [description, setDescription] = useState("");
  const [files, setFiles] = useState([]);
  const [commit, setCommit] = useState(false);
  const [loading, setLoading] = useState(false);

  // H√†m x·ª≠ l√Ω khi tick checkbox l√Ω do
  const handleReasonChange = (reason) => {
    if (selectedReasons.includes(reason)) {
      setSelectedReasons(selectedReasons.filter((item) => item !== reason));
    } else {
      setSelectedReasons([...selectedReasons, reason]);
    }
  };

  // H√†m x·ª≠ l√Ω khi submit b√°o c√°o
  const handleSubmit = async () => {
    if (!commit) {
      alert("Vui l√≤ng x√°c nh·∫≠n cam k·∫øt tr∆∞·ªõc khi g·ª≠i b√°o c√°o!");
      return;
    }

    if (selectedReasons.length === 0) {
      alert("Vui l√≤ng ch·ªçn √≠t nh·∫•t m·ªôt l√Ω do ƒë·ªÉ b√°o c√°o!");
      return;
    }

    setLoading(true);
    try {
      // T·∫°o formData ƒë·ªÉ g·ª≠i k√®m file
      const formData = new FormData();
      formData.append("campaignId", "12345"); // ID chi·∫øn d·ªãch (thay th·∫ø b·∫±ng d·ªØ li·ªáu th·ª±c)
      formData.append("reasons", JSON.stringify(selectedReasons));
      formData.append("otherReason", otherReason);
      formData.append("description", description);
      files.forEach((file) => formData.append("files", file));

      // G·ªçi API
      const response = await axios.post("/api/report-campaign", formData, {
        headers: { "Content-Type": "multipart/form-data" },
      });

      if (response.status === 200) {
        alert("B√°o c√°o ƒë√£ ƒë∆∞·ª£c g·ª≠i th√†nh c√¥ng!");
        // Reset form sau khi g·ª≠i
        setSelectedReasons([]);
        setOtherReason("");
        setDescription("");
        setFiles([]);
        setCommit(false);
      }
    } catch (error) {
      console.error(error);
      alert("C√≥ l·ªói x·∫£y ra khi g·ª≠i b√°o c√°o. Vui l√≤ng th·ª≠ l·∫°i!");
    } finally {
      setLoading(false);
    }
  };

  return (
    <div className="min-h-screen bg-gray-50 text-gray-800">

      {/* Th√¥ng tin chi·∫øn d·ªãch */}
      <section className="max-w-4xl mx-auto px-6 py-8">
        <h1 className="text-2xl font-bold mb-6 text-center">
          üì¢ B√ÅO C√ÅO CHI·∫æN D·ªäCH G√ÇY QU·ª∏
        </h1>

        <div className="bg-white shadow rounded-lg p-6 grid grid-cols-1 md:grid-cols-2 gap-6">
          {/* H√¨nh ·∫£nh chi·∫øn d·ªãch */}
          <div>
            <img
              src="/images/img_image_18_4.png"
              alt="Chi·∫øn d·ªãch gi√∫p ƒë·ª° Chang Thi Ha"
              className="w-full h-64 object-cover rounded-md"
            />
          </div>

          {/* Th√¥ng tin chi·∫øn d·ªãch */}
          <div className="space-y-2 text-sm">
            <h2 className="text-lg font-semibold text-red-600">
              H√£y gi√∫p Chang Thi Ha ch·ªØa tr·ªã cƒÉn b·ªánh nghi√™m tr·ªçng.
            </h2>
            <p><strong>üéØ M·ª•c ti√™u chi·∫øn d·ªãch:</strong> 30,000,000 VND</p>
            <p><strong>üìç ƒê·ªãa ƒëi·ªÉm:</strong> H√† Giang</p>
            <p><strong>‚è≥ Tr·∫°ng th√°i:</strong> ƒêang ch·ªù ph√™ duy·ªát</p>
            <p><strong>üìÖ Ng√†y b·∫Øt ƒë·∫ßu:</strong> 11/11/2025</p>
          </div>
        </div>
      </section>

      {/* Form b√°o c√°o */}
      <section className="max-w-4xl mx-auto px-6 py-8">
        <div className="bg-white shadow rounded-lg p-6 space-y-6">
          {/* L√Ω do b√°o c√°o */}
          <h2 className="text-lg font-semibold">üìù L√Ω do b·∫°n mu·ªën b√°o c√°o chi·∫øn d·ªãch n√†y</h2>

          <div className="space-y-2 text-sm">
            {reasonsList.map((reason, idx) => (
              <div key={idx} className="flex items-start gap-2">
                <input
                  type="checkbox"
                  id={`reason-${idx}`}
                  className="mt-1"
                  checked={selectedReasons.includes(reason)}
                  onChange={() => handleReasonChange(reason)}
                />
                <label htmlFor={`reason-${idx}`}>{reason}</label>
              </div>
            ))}

            {/* L√Ω do kh√°c */}
            {selectedReasons.includes("Kh√°c") && (
              <textarea
                placeholder="N·∫øu ch·ªçn 'Kh√°c', vui l√≤ng m√¥ t·∫£..."
                className="w-full mt-2 p-2 border rounded-md text-sm"
                rows={3}
                value={otherReason}
                onChange={(e) => setOtherReason(e.target.value)}
              />
            )}
          </div>

          {/* M√¥ t·∫£ th√™m */}
          <div>
            <h3 className="text-sm font-medium mb-1">üìÑ M√¥ t·∫£ b·ªï sung (n·∫øu c√≥)</h3>
            <textarea
              placeholder="Cung c·∫•p th√™m chi ti·∫øt n·∫øu c·∫ßn..."
              className="w-full p-2 border rounded-md text-sm"
              rows={4}
              value={description}
              onChange={(e) => setDescription(e.target.value)}
            />
          </div>

          {/* Upload t√†i li·ªáu */}
          <div>
            <h3 className="text-sm font-medium mb-1">üìé T√†i li·ªáu ho·∫∑c h√¨nh ·∫£nh minh ch·ª©ng (t√πy ch·ªçn)</h3>
            <input
              type="file"
              className="text-sm"
              multiple
              onChange={(e) => setFiles(Array.from(e.target.files))}
            />
          </div>

          {/* Cam k·∫øt */}
          <div className="flex items-start gap-2">
            <input
              type="checkbox"
              id="commit"
              className="mt-1"
              checked={commit}
              onChange={(e) => setCommit(e.target.checked)}
            />
            <label htmlFor="commit" className="text-sm">
              T√¥i cam k·∫øt ph·∫£n √°nh trung th·ª±c v√† ch·ªãu tr√°ch nhi·ªám v·ªÅ n·ªôi dung b√°o c√°o n√†y.
            </label>
          </div>

          {/* N√∫t g·ª≠i */}
          <div className="text-center">
            <button
              onClick={handleSubmit}
              disabled={loading}
              className={`${
                loading ? "bg-gray-400" : "bg-red-600 hover:bg-red-700"
              } text-white px-6 py-2 rounded-md text-sm font-semibold`}
            >
              {loading ? "ƒêang g·ª≠i..." : "G·ª¨I B√ÅO C√ÅO"}
            </button>
          </div>
        </div>
      </section>

    </div>
  );
};

export default ReportCampaign;
